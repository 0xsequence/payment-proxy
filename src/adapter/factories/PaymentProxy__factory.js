/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { utils, Contract, ContractFactory } from "ethers";
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_firstOwner",
                type: "address",
            },
            {
                internalType: "string",
                name: "_name",
                type: "string",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "itemRecipient",
                type: "address",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256[]",
                name: "itemIDsPurchased",
                type: "uint256[]",
            },
        ],
        name: "ItemBurn",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "itemRecipient",
                type: "address",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256[]",
                name: "itemIDsPurchased",
                type: "uint256[]",
            },
        ],
        name: "ItemPurchase",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        stateMutability: "nonpayable",
        type: "fallback",
    },
    {
        inputs: [],
        name: "getOwner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "name",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "nonces",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "address",
                name: "_from",
                type: "address",
            },
            {
                internalType: "uint256[]",
                name: "_ids",
                type: "uint256[]",
            },
            {
                internalType: "uint256[]",
                name: "_amounts",
                type: "uint256[]",
            },
            {
                internalType: "bytes",
                name: "_data",
                type: "bytes",
            },
        ],
        name: "onERC1155BatchReceived",
        outputs: [
            {
                internalType: "bytes4",
                name: "",
                type: "bytes4",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_operator",
                type: "address",
            },
            {
                internalType: "address",
                name: "_from",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_id",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_amount",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "_data",
                type: "bytes",
            },
        ],
        name: "onERC1155Received",
        outputs: [
            {
                internalType: "bytes4",
                name: "",
                type: "bytes4",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_currencyToken",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_currencyAmount",
                type: "uint256",
            },
            {
                internalType: "uint32",
                name: "_nonce",
                type: "uint32",
            },
            {
                internalType: "uint256[]",
                name: "_itemIDsPurchased",
                type: "uint256[]",
            },
            {
                internalType: "address",
                name: "_itemRecipient",
                type: "address",
            },
        ],
        name: "purchaseItems",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes4",
                name: "interfaceID",
                type: "bytes4",
            },
        ],
        name: "supportsInterface",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_recipient",
                type: "address",
            },
            {
                internalType: "address",
                name: "_erc20",
                type: "address",
            },
        ],
        name: "withdrawERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x60806040523480156200001157600080fd5b506040516200187e3803806200187e833981016040819052620000349162000147565b600080546001600160a01b0319166001600160a01b03841690811782556040518492907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3508051620000929060029060208401906200009b565b50505062000229565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282620000d357600085556200011e565b82601f10620000ee57805160ff19168380011785556200011e565b828001600101855582156200011e579182015b828111156200011e57825182559160200191906001019062000101565b506200012c92915062000130565b5090565b5b808211156200012c576000815560010162000131565b600080604083850312156200015a578182fd5b82516001600160a01b038116811462000171578283fd5b602084810151919350906001600160401b038082111562000190578384fd5b818601915086601f830112620001a4578384fd5b815181811115620001b157fe5b604051601f8201601f1916810185018381118282101715620001cf57fe5b6040528181528382018501891015620001e6578586fd5b8592505b81831015620002095783830185015181840186015291840191620001ea565b818311156200021a57858583830101525b80955050505050509250929050565b61164580620002396000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c8063893d20e811610076578063bc197c811161005b578063bc197c8114610179578063f23a6e6114610199578063f2fde38b146101ac576100a3565b8063893d20e8146101515780639456fbcc14610166576100a3565b806301ffc9a7146100de57806306fdde03146101075780631fbe0e901461011c5780637ecebe0014610131575b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100d59061139d565b60405180910390fd5b6100f16100ec366004610fe0565b6101bf565b6040516100fe919061123a565b60405180910390f35b61010f61025a565b6040516100fe9190611272565b61012f61012a366004610f0a565b610303565b005b61014461013f366004610cf6565b61046c565b6040516100fe919061156e565b61015961047e565b6040516100fe919061115f565b61012f610174366004610d19565b61049a565b61018c610187366004610d51565b61068c565b6040516100fe9190611245565b61018c6101a7366004610e65565b610876565b61012f6101ba366004610cf6565b610965565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000148061025257507fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e000000000000000000000000000000000000000000000000000000000145b90505b919050565b600280546040805160206001841615610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01909316849004601f810184900484028201840190925281815292918301828280156102fb5780601f106102d0576101008083540402835291602001916102fb565b820191906000526020600020905b8154815290600101906020018083116102de57829003601f168201915b505050505081565b73ffffffffffffffffffffffffffffffffffffffff8616158015906103285750600085115b61035e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100d590611511565b3360009081526001602052604090205463ffffffff851681146103ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100d5906113fa565b3360009081526001602081905260408220908301905573ffffffffffffffffffffffffffffffffffffffff83166103e457336103e6565b825b90506103f48833308a610a76565b8563ffffffff168173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fdccf8b99ed5a138d2390b19fdc1494526424496052456bbb1fb1d160a3541864888860405161045a9291906111a6565b60405180910390a45050505050505050565b60016020526000908152604090205481565b60005473ffffffffffffffffffffffffffffffffffffffff1690565b60005473ffffffffffffffffffffffffffffffffffffffff1633146104eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100d590611457565b73ffffffffffffffffffffffffffffffffffffffff8216610538576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100d5906112e3565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff8316906370a082319061058d90309060040161115f565b60206040518083038186803b1580156105a557600080fd5b505afa1580156105b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105dd919061110d565b6040517fa9059cbb00000000000000000000000000000000000000000000000000000000815290915073ffffffffffffffffffffffffffffffffffffffff83169063a9059cbb906106349086908590600401611180565b602060405180830381600087803b15801561064e57600080fd5b505af1158015610662573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106869190610fc0565b50505050565b6000610696610c46565b828060200190518101906106aa9190611020565b805190915060009073ffffffffffffffffffffffffffffffffffffffff166106d257866106d5565b81515b73ffffffffffffffffffffffffffffffffffffffff88166000908152600160209081526040909120549084015191925090811461073e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100d5906114b4565b73ffffffffffffffffffffffffffffffffffffffff88166000908152600160208190526040918290209083019055517f20ec271b00000000000000000000000000000000000000000000000000000000815233906320ec271b906107a8908a908a9060040161120c565b600060405180830381600087803b1580156107c257600080fd5b505af11580156107d6573d6000803e3d6000fd5b5050505082602001518273ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff167f2095ce97258e73096d4143da4a4daa16b0bff48b7e853f881c48cc8d781c7ac3866040015160405161084091906111f9565b60405180910390a4507fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b6040805160018082528183019092526000916060919060208083019080368337505060408051600180825281830190925292935060609291506020808301908036833701905050905086826000815181106108cd57fe5b60200260200101818152505085816000815181106108e757fe5b6020026020010181815250506109368989848489898080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061068c92505050565b507ff23a6e61000000000000000000000000000000000000000000000000000000009998505050505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146109b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100d590611457565b73ffffffffffffffffffffffffffffffffffffffff8116610a03576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100d590611340565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83811691821780845560405192939116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a350565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd0000000000000000000000000000000000000000000000000000000017815292518251600094606094938a169392918291908083835b60208310610b5457805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101610b17565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610bb6576040519150601f19603f3d011682016040523d82523d6000602084013e610bbb565b606091505b5091509150818015610be9575080511580610be95750808060200190516020811015610be657600080fd5b50515b610c3e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806115df6031913960400191505060405180910390fd5b505050505050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001606081525090565b8035610255816115b9565b600082601f830112610c98578081fd5b8135610cab610ca68261159b565b611577565b818152915060208083019084810181840286018201871015610ccc57600080fd5b60005b84811015610ceb57813584529282019290820190600101610ccf565b505050505092915050565b600060208284031215610d07578081fd5b8135610d12816115b9565b9392505050565b60008060408385031215610d2b578081fd5b8235610d36816115b9565b91506020830135610d46816115b9565b809150509250929050565b600080600080600060a08688031215610d68578081fd5b8535610d73816115b9565b9450602086810135610d84816115b9565b9450604087013567ffffffffffffffff80821115610da0578384fd5b610dac8a838b01610c88565b95506060890135915080821115610dc1578384fd5b610dcd8a838b01610c88565b94506080890135915080821115610de2578384fd5b818901915089601f830112610df5578384fd5b813581811115610e0157fe5b610e31847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611577565b91508082528a84828501011115610e46578485fd5b8084840185840137810190920192909252949793965091945092919050565b60008060008060008060a08789031215610e7d578081fd5b8635610e88816115b9565b95506020870135610e98816115b9565b94506040870135935060608701359250608087013567ffffffffffffffff80821115610ec2578283fd5b818901915089601f830112610ed5578283fd5b813581811115610ee3578384fd5b8a6020828501011115610ef4578384fd5b6020830194508093505050509295509295509295565b60008060008060008060a08789031215610f22578182fd5b8635610f2d816115b9565b955060208701359450604087013563ffffffff81168114610f4c578283fd5b9350606087013567ffffffffffffffff80821115610f68578384fd5b818901915089601f830112610f7b578384fd5b813581811115610f89578485fd5b8a60208083028501011115610f9c578485fd5b602083019550809450505050610fb460808801610c7d565b90509295509295509295565b600060208284031215610fd1578081fd5b81518015158114610d12578182fd5b600060208284031215610ff1578081fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114610d12578182fd5b60006020808385031215611032578182fd5b825167ffffffffffffffff80821115611049578384fd5b908401906060828703121561105c578384fd5b60405160608101818110838211171561107157fe5b604052825161107f816115b9565b8152828401518482015260408301518281111561109a578586fd5b80840193505086601f8401126110ae578485fd5b825191506110be610ca68361159b565b82815284810190848601868502860187018a10156110da578788fd5b8795505b848610156110fc5780518352600195909501949186019186016110de565b506040830152509695505050505050565b60006020828403121561111e578081fd5b5051919050565b6000815180845260208085019450808401835b8381101561115457815187529582019590820190600101611138565b509495945050505050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b6000602082528260208301527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156111de578081fd5b60208302808560408501379190910160400190815292915050565b600060208252610d126020830184611125565b60006040825261121f6040830185611125565b82810360208401526112318185611125565b95945050505050565b901515815260200190565b7fffffffff0000000000000000000000000000000000000000000000000000000091909116815260200190565b6000602080835283518082850152825b8181101561129e57858101830151858201604001528201611282565b818111156112af5783604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b6020808252602d908201527f5061796d656e7450726f787923776974686472617745524332303a20494e564160408201527f4c49445f524543495049454e5400000000000000000000000000000000000000606082015260800190565b6020808252602a908201527f4f776e61626c65237472616e736665724f776e6572736869703a20494e56414c60408201527f49445f4144445245535300000000000000000000000000000000000000000000606082015260800190565b60208082526022908201527f5061796d656e7450726f7879235f3a20554e535550504f525445445f4d45544860408201527f4f44000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526029908201527f5061796d656e7450726f78792370757263686173654974656d733a20494e564160408201527f4c49445f4e4f4e43450000000000000000000000000000000000000000000000606082015260800190565b60208082526026908201527f4f776e61626c65236f6e6c794f776e65723a2053454e4445525f49535f4e4f5460408201527f5f4f574e45520000000000000000000000000000000000000000000000000000606082015260800190565b60208082526032908201527f5061796d656e7450726f7879236f6e455243313135354261746368526563656960408201527f7665643a20494e56414c49445f4e4f4e43450000000000000000000000000000606082015260800190565b6020808252603b908201527f5061796d656e7450726f78792370757263686173654974656d733a20494e564160408201527f4c49445f5041594d454e545f544f4b454e5f4f525f414d4f554e540000000000606082015260800190565b90815260200190565b60405181810167ffffffffffffffff8111828210171561159357fe5b604052919050565b600067ffffffffffffffff8211156115af57fe5b5060209081020190565b73ffffffffffffffffffffffffffffffffffffffff811681146115db57600080fd5b5056fe5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c6564a2646970667358221220e3b1373fe1d1b8f288b4e91f96a149c1935f073c1a30bf1983be6e2088ccdda764736f6c63430007040033";
const isSuperArgs = (xs) => xs.length > 1;
export class PaymentProxy__factory extends ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(_firstOwner, _name, overrides) {
        return super.deploy(_firstOwner, _name, overrides || {});
    }
    getDeployTransaction(_firstOwner, _name, overrides) {
        return super.getDeployTransaction(_firstOwner, _name, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new Contract(address, _abi, signerOrProvider);
    }
}
PaymentProxy__factory.bytecode = _bytecode;
PaymentProxy__factory.abi = _abi;
